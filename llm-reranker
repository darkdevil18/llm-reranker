{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":248065049,"sourceType":"kernelVersion"}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import warnings\nimport random\n\ndef warn(*args, **kwargs):\n    pass\nimport warnings\nwarnings.warn = warn\nwarnings.filterwarnings('ignore')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:38:57.230661Z","iopub.execute_input":"2025-07-01T15:38:57.231213Z","iopub.status.idle":"2025-07-01T15:38:57.238693Z","shell.execute_reply.started":"2025-07-01T15:38:57.231183Z","shell.execute_reply":"2025-07-01T15:38:57.237937Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"from kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\nsecret_value_0 = user_secrets.get_secret(\"hf_token\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:38:57.240098Z","iopub.execute_input":"2025-07-01T15:38:57.240407Z","iopub.status.idle":"2025-07-01T15:38:57.733901Z","shell.execute_reply.started":"2025-07-01T15:38:57.240381Z","shell.execute_reply":"2025-07-01T15:38:57.733320Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"from huggingface_hub import login\n\nlogin(token=secret_value_0)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:38:57.734420Z","iopub.execute_input":"2025-07-01T15:38:57.734628Z","iopub.status.idle":"2025-07-01T15:38:58.420854Z","shell.execute_reply.started":"2025-07-01T15:38:57.734611Z","shell.execute_reply":"2025-07-01T15:38:58.420326Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"from datasets import load_dataset, Dataset\nfrom pprint import pp","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:38:58.422353Z","iopub.execute_input":"2025-07-01T15:38:58.422571Z","iopub.status.idle":"2025-07-01T15:39:00.940063Z","shell.execute_reply.started":"2025-07-01T15:38:58.422554Z","shell.execute_reply":"2025-07-01T15:39:00.939539Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"ds = load_dataset(\"liyucheng/goodreads\", \"books\", split='train')\nprint(ds)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:39:00.941053Z","iopub.execute_input":"2025-07-01T15:39:00.941423Z","iopub.status.idle":"2025-07-01T15:40:24.374101Z","shell.execute_reply.started":"2025-07-01T15:39:00.941390Z","shell.execute_reply":"2025-07-01T15:40:24.373431Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"README.md: 0.00B [00:00, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"501fb94d5dc54ef38da970dc7a1afdaf"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"train-00000-of-00002.parquet:   0%|          | 0.00/869M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f42d7828e8eb4d8a8e4c3e18bae2b22a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"train-00001-of-00002.parquet:   0%|          | 0.00/869M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"61d12a5f69cc45a691cb80e5906d6e72"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/2360655 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7df678615d244475a6ed5942a655058e"}},"metadata":{}},{"name":"stdout","text":"Dataset({\n    features: ['book_id', 'title', 'isbn13', 'isbn', 'author_ids', 'author_names', 'average_rating', 'ratings_count', 'text_reviews_count', 'publication_year', 'publication_month', 'publication_day', 'publisher', 'language_code', 'description', 'genres', 'num_pages', 'format', 'work_id', 'original_title', 'original_publication_year', 'original_language_id'],\n    num_rows: 2360655\n})\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"EXCLUDE_GENRES_EXACT = {\n    \"to-read\", \"currently-reading\", \"my-library\", \"books-i-own\", \"library-book\",\n    \"ebook\", \"audiobook\", \"audio-book\", \"paperback\", \"hardback\", \"wish-list\",\n    \"unfinished\", \"have\", \"my-books\", \"home\", \"books\", \"favorites\", \"default\",\n    \"ficton\", \"bookclub\", \"book-club\", \"tbi-book-club\", \"book-group\",\n    \"listened\", \"audio\", \"audio-books\", \"library\", \"gave-up\"\n}\n\nEXCLUDE_STARTS_WITH = {\"read-\", \"read-in-\", \"own\"}\n\nGENRE_NORMALIZATION = {\n    \"general\": \"fiction\",\n    \"novel\": \"fiction\",\n    \"novels\": \"fiction\",\n    \"general-fiction\": \"fiction\",\n    \"adult-fiction\": \"fiction\",\n    \"historical\": \"historical-fiction\",\n    \"history\": \"historical-fiction\",\n    \"nonfiction\": \"non-fiction\",\n    \"ya\": \"young-adult\",\n    \"sci-fi\": \"science-fiction\"\n}\n\nAPPROVED_GENRES = {\n    \"fiction\", \"romance\", \"fantasy\", \"mystery\", \"historical-fiction\",\n    \"young-adult\", \"literature\", \"adventure\", \"thriller\",\n    \"science-fiction\", \"suspense\", \"paranormal\", \"crime\",\n    \"drama\", \"humor\", \"contemporary\", \"contemporary-fiction\",\n    \"contemporary-romance\", \"classics\", \"non-fiction\", \"adult\"\n}\n\n\ndef clean_genres_list(genres_list):\n    cleaned = []\n    for g in genres_list:\n        g = g.strip().lower()\n\n        if g in EXCLUDE_GENRES_EXACT:\n            continue\n\n        if any(g.startswith(prefix) for prefix in EXCLUDE_STARTS_WITH):\n            continue\n\n        unified = GENRE_NORMALIZATION.get(g, g)\n\n        if unified in APPROVED_GENRES and unified not in cleaned:\n            cleaned.append(unified)\n\n    return \", \".join(cleaned) if cleaned else \"unknown\"\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:40:24.374944Z","iopub.execute_input":"2025-07-01T15:40:24.375421Z","iopub.status.idle":"2025-07-01T15:40:24.382006Z","shell.execute_reply.started":"2025-07-01T15:40:24.375393Z","shell.execute_reply":"2025-07-01T15:40:24.381318Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"def prepare_goodreads(sample):\n    authors = \", \".join(sample[\"author_names\"]) if sample[\"author_names\"] else \"unknown author\"\n    genres = clean_genres_list(sample[\"genres\"])\n    genres = genres if genres else 'general'\n    desc = sample['description'] if sample['description'] else \"no description\"\n\n    try:\n        average_rating = float(sample['average_rating'])\n    except:\n        average_rating = 3.0\n        \n    ratings_count = int(sample['ratings_count']) if sample['ratings_count'].isnumeric() else 0\n    \n    return {\n        \"author_names\": authors,\n        \"genres\": genres,\n        \"description\": desc,\n        \"ratings_count\": ratings_count,\n        \"average_rating\": average_rating\n    }","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:40:24.382739Z","iopub.execute_input":"2025-07-01T15:40:24.382950Z","iopub.status.idle":"2025-07-01T15:40:29.309172Z","shell.execute_reply.started":"2025-07-01T15:40:24.382928Z","shell.execute_reply":"2025-07-01T15:40:29.308348Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"cols_to_remove = [\n    'book_id',\n    'isbn13',\n    'isbn',\n    'author_ids',\n    'text_reviews_count',\n    'publication_month',\n    'publication_day',\n    'publisher',\n    'language_code',\n    'num_pages',\n    'format',\n    'work_id',\n    'original_title',\n    'original_publication_year',\n    'original_language_id'\n]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:40:29.310032Z","iopub.execute_input":"2025-07-01T15:40:29.310327Z","iopub.status.idle":"2025-07-01T15:40:30.406881Z","shell.execute_reply.started":"2025-07-01T15:40:29.310296Z","shell.execute_reply":"2025-07-01T15:40:30.406041Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"import os\n\nds = ds.map(prepare_goodreads, remove_columns=cols_to_remove, num_proc=os.cpu_count())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:40:30.407618Z","iopub.execute_input":"2025-07-01T15:40:30.407836Z","iopub.status.idle":"2025-07-01T15:44:33.952997Z","shell.execute_reply.started":"2025-07-01T15:40:30.407819Z","shell.execute_reply":"2025-07-01T15:44:33.952324Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Map (num_proc=4):   0%|          | 0/2360655 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"03d6e5fa7bde4167aac173f6669960b4"}},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"print(ds.column_names)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:44:33.956387Z","iopub.execute_input":"2025-07-01T15:44:33.956625Z","iopub.status.idle":"2025-07-01T15:44:33.961007Z","shell.execute_reply.started":"2025-07-01T15:44:33.956601Z","shell.execute_reply":"2025-07-01T15:44:33.960426Z"}},"outputs":[{"name":"stdout","text":"['title', 'author_names', 'average_rating', 'ratings_count', 'publication_year', 'description', 'genres']\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"pp(ds[0])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:44:33.961632Z","iopub.execute_input":"2025-07-01T15:44:33.961821Z","iopub.status.idle":"2025-07-01T15:44:34.265589Z","shell.execute_reply.started":"2025-07-01T15:44:33.961805Z","shell.execute_reply":"2025-07-01T15:44:34.264905Z"}},"outputs":[{"name":"stdout","text":"{'title': 'W.C. Fields: A Life on Film',\n 'author_names': 'Ronald J. Fields',\n 'average_rating': 4.0,\n 'ratings_count': 3,\n 'publication_year': '1984',\n 'description': 'no description',\n 'genres': 'unknown'}\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"import re\n\ndef is_english(text):\n    pattern = r'^[\\u0000-\\u024F\\s.,!?\\'\\\";:\\-\\(\\)\\[\\]0-9]+$'\n    return bool(re.fullmatch(pattern, text))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:44:34.266265Z","iopub.execute_input":"2025-07-01T15:44:34.266531Z","iopub.status.idle":"2025-07-01T15:44:34.275768Z","shell.execute_reply.started":"2025-07-01T15:44:34.266500Z","shell.execute_reply":"2025-07-01T15:44:34.275093Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"ds_fil = ds.filter(lambda ex: is_english(ex['title']))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:44:34.276536Z","iopub.execute_input":"2025-07-01T15:44:34.276731Z","iopub.status.idle":"2025-07-01T15:44:54.106866Z","shell.execute_reply.started":"2025-07-01T15:44:34.276711Z","shell.execute_reply":"2025-07-01T15:44:54.106061Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Filter:   0%|          | 0/2360655 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"dd26a488663f485fb814f73c33bbabe9"}},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"def build_item_mappings(dataset):\n    itemid_to_name = {}\n    itemname_to_id = {}\n\n    for ex in dataset:\n        book_id = ex[\"book_id\"]\n        title = ex[\"title\"]\n        author = ex[\"author_names\"]\n        year = ex.get(\"publication_year\", \"Unknown\")\n        \n        cleaned_genres = ex[\"genres\"]\n        avg_rating = ex.get(\"average_rating\", \"Unknown\")\n        ratings_count = ex.get(\"ratings_count\", \"Unknown\")\n\n        display_name = (f\"{title} by {author}, published in {year}, Genres: {cleaned_genres}, \"\n                        f\"Average Rating: {avg_rating}, Ratings Count: {ratings_count}\")\n\n        itemid_to_name[book_id] = display_name\n        itemname_to_id[display_name] = book_id\n\n    return itemid_to_name, itemname_to_id\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:44:54.107656Z","iopub.execute_input":"2025-07-01T15:44:54.107844Z","iopub.status.idle":"2025-07-01T15:44:54.112590Z","shell.execute_reply.started":"2025-07-01T15:44:54.107829Z","shell.execute_reply":"2025-07-01T15:44:54.111866Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"# itemid_to_name, itemname_to_id = build_item_mappings(ds)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:44:54.113390Z","iopub.execute_input":"2025-07-01T15:44:54.113744Z","iopub.status.idle":"2025-07-01T15:44:54.158750Z","shell.execute_reply.started":"2025-07-01T15:44:54.113719Z","shell.execute_reply":"2025-07-01T15:44:54.158189Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"from transformers import AutoModelForCausalLM, AutoTokenizer\nimport torch\nfrom sklearn.metrics.pairwise import cosine_similarity","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:44:54.159419Z","iopub.execute_input":"2025-07-01T15:44:54.159620Z","iopub.status.idle":"2025-07-01T15:45:07.204043Z","shell.execute_reply.started":"2025-07-01T15:44:54.159595Z","shell.execute_reply":"2025-07-01T15:45:07.203459Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"# # Setup GPT-2\n# tokenizer = AutoTokenizer.from_pretrained('gpt2')\n# model = AutoModelForCausalLM.from_pretrained('gpt2')\n# model.eval()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:07.204751Z","iopub.execute_input":"2025-07-01T15:45:07.205202Z","iopub.status.idle":"2025-07-01T15:45:07.208669Z","shell.execute_reply.started":"2025-07-01T15:45:07.205182Z","shell.execute_reply":"2025-07-01T15:45:07.207813Z"}},"outputs":[],"execution_count":17},{"cell_type":"code","source":"user_requests = [\n    \"I prefer fantasy and science fiction with strong world-building.\",\n    # \"I enjoy romance novels by classic authors.\",\n    \"Give me books that are highly popular with many ratings.\",\n    \"I like contemporary fiction focusing on relationships.\",\n    \"Looking for diverse genres, not just fantasy.\",\n    \"Show me books with high average ratings, regardless of genre.\",\n    \"I want to explore lesser-known but highly rated books.\",\n    \"List books published after 2000 that are popular.\",\n    \"I like historical fiction with strong female characters.\",\n    \"Show me books with genre diversity, avoiding duplicates.\",\n    \"Recommend books that mix mystery and thriller elements.\",\n    # \"Suggest short story collections by well-known authors.\",\n    \"I'm interested in books that won major literary awards.\",\n    \"List humorous novels that are light and easy to read.\",\n    \"I want epic fantasy series with complex plots.\",\n    \"Show me recent bestsellers from diverse authors.\",\n    \"Give me novels that explore philosophical themes.\",\n    \"Suggest debut novels that received critical acclaim.\",\n    \"I like books that combine science fiction and romance.\",\n    \"Show me highly rated books with minimal violence.\"\n]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:07.209661Z","iopub.execute_input":"2025-07-01T15:45:07.210055Z","iopub.status.idle":"2025-07-01T15:45:07.241308Z","shell.execute_reply.started":"2025-07-01T15:45:07.210026Z","shell.execute_reply":"2025-07-01T15:45:07.240560Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"len(ds_fil)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:07.242114Z","iopub.execute_input":"2025-07-01T15:45:07.242537Z","iopub.status.idle":"2025-07-01T15:45:07.258703Z","shell.execute_reply.started":"2025-07-01T15:45:07.242518Z","shell.execute_reply":"2025-07-01T15:45:07.258007Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"2236237"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"# random_candidate_ids = random.sample(range(len(ds_fil)), k=5)\n# candidates = []\n# for cid in random_candidate_ids:\n#     display_text = f\"{ds_fil[cid]['title']} by {ds_fil[cid]['author_names']}\"\n#     # display_text = ds_fil[cid]['text']\n#     candidates.append({\"text\": display_text})\n\n# candidate_texts = [item['text'] for item in candidates]\n\n# user_request = random.choice(user_requests)\n# user_request = \"Suggest popular science-fiction stories with historical settings.\"\n# prompt_text = generate_gpt2_prompt(candidate_texts, user_request, top_n=5)\n# print(\"=== Generated Prompt ===\")\n# print(prompt_text)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:07.259387Z","iopub.execute_input":"2025-07-01T15:45:07.259684Z","iopub.status.idle":"2025-07-01T15:45:07.272026Z","shell.execute_reply.started":"2025-07-01T15:45:07.259668Z","shell.execute_reply":"2025-07-01T15:45:07.271326Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"from transformers import pipeline\n\ndef run_pipeline_generation(prompt_text, generator, max_new_tokens=256, temperature=0.1, top_p=0.9, top_k=1):\n    \n    output = generator(\n        prompt_text, \n        max_new_tokens=max_new_tokens, \n        temperature=temperature, \n        top_p=top_p, \n        top_k=top_k\n    )\n    \n    generated_full_text = output[0][\"generated_text\"]\n    generated_only = generated_full_text.strip()\n    return generated_only","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:07.272764Z","iopub.execute_input":"2025-07-01T15:45:07.273007Z","iopub.status.idle":"2025-07-01T15:45:20.998063Z","shell.execute_reply.started":"2025-07-01T15:45:07.272986Z","shell.execute_reply":"2025-07-01T15:45:20.997487Z"}},"outputs":[{"name":"stderr","text":"2025-07-01 15:45:09.205496: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1751384709.386845      35 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1751384709.439439      35 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}],"execution_count":21},{"cell_type":"code","source":"# model_name = \"meta-llama/Llama-2-7b-chat-hf\"\n\n# model = AutoModelForCausalLM.from_pretrained(model_name)\n# tokenizer = AutoTokenizer.from_pretrained(model_name)\n# # tokenizer.pad_token = tokenizer.eos_token","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:20.998684Z","iopub.execute_input":"2025-07-01T15:45:20.999167Z","iopub.status.idle":"2025-07-01T15:45:21.002900Z","shell.execute_reply.started":"2025-07-01T15:45:20.999148Z","shell.execute_reply":"2025-07-01T15:45:21.001832Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"import random\n\nuser_request = random.choice(user_requests)\nuser_request","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:21.003792Z","iopub.execute_input":"2025-07-01T15:45:21.004044Z","iopub.status.idle":"2025-07-01T15:45:21.167212Z","shell.execute_reply.started":"2025-07-01T15:45:21.004022Z","shell.execute_reply":"2025-07-01T15:45:21.166608Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"'Give me novels that explore philosophical themes.'"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"sample_size = 10\nsample_indices = random.sample(range(len(ds_fil)), sample_size)\nsample_ds = ds_fil.select(sample_indices).to_list()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:21.168006Z","iopub.execute_input":"2025-07-01T15:45:21.168212Z","iopub.status.idle":"2025-07-01T15:45:21.209703Z","shell.execute_reply.started":"2025-07-01T15:45:21.168195Z","shell.execute_reply":"2025-07-01T15:45:21.208995Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"from book_ranker import BookReRanker\n\nranker = BookReRanker()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:21.210622Z","iopub.execute_input":"2025-07-01T15:45:21.211497Z","iopub.status.idle":"2025-07-01T15:45:41.755627Z","shell.execute_reply.started":"2025-07-01T15:45:21.211473Z","shell.execute_reply":"2025-07-01T15:45:41.754807Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/665 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b4372ae59f2341e192246f93a55ca30b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/548M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e6b33751a6ce4a3687bae01d57beba7d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"generation_config.json:   0%|          | 0.00/124 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"859a5166d5ff48a5a7b27dc971f2dc60"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/26.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"29a61c8b03a6431c869fbd6a4d666e56"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/1.04M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e476e09e92f04310a9cd24c534990568"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ca0f7b15c05249f69900d022c83e03e2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"437905a0f006479ba5c0360706377df6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"modules.json:   0%|          | 0.00/349 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d0e8363d6dbb40cbb8fd27b78c688943"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config_sentence_transformers.json:   0%|          | 0.00/116 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"245ec05d838b4ed9afd295dbcafd1914"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"README.md: 0.00B [00:00, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e0232e238dcf4bfea39631371de7c575"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"sentence_bert_config.json:   0%|          | 0.00/53.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f37dcfbef38c4f7ebfb957a1ce826a26"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/612 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e96a3a7f2b8640e2811fb1cdd5e28234"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/90.9M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d8771d2cf2e34827b79563639846e8e1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/350 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b13899f238794c49aebc899dd4dfc107"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt: 0.00B [00:00, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8cd8e48b79e249d48cda4ee3c975d74a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json: 0.00B [00:00, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"621944be06d34925b8c36211b2f55813"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ec0861d0c68b47b9acab2028e3fc9624"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/190 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4e2ed7017edf4da4a484a3cc947df70b"}},"metadata":{}}],"execution_count":25},{"cell_type":"code","source":"user_request","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:41.756581Z","iopub.execute_input":"2025-07-01T15:45:41.756966Z","iopub.status.idle":"2025-07-01T15:45:41.762705Z","shell.execute_reply.started":"2025-07-01T15:45:41.756941Z","shell.execute_reply":"2025-07-01T15:45:41.761690Z"}},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"'Give me novels that explore philosophical themes.'"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"ranked_books = ranker.rerank(user_request, sample_ds, top_k = len(sample_ds))\nranked_books = [book['title'] for book in ranked_books]\nranked_books","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:41.763262Z","iopub.execute_input":"2025-07-01T15:45:41.763547Z","iopub.status.idle":"2025-07-01T15:45:43.042149Z","shell.execute_reply.started":"2025-07-01T15:45:41.763526Z","shell.execute_reply":"2025-07-01T15:45:43.041336Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b01e589879eb48d98546125a79240a90"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6be73b41c2f845a7a65824058448d826"}},"metadata":{}},{"name":"stderr","text":"`loss_type=None` was set in the config but it is unrecognised.Using the default loss: `ForCausalLMLoss`.\n","output_type":"stream"},{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"[\"Mary and O'Neil\",\n 'State And Local Politics: Government By The People',\n \"Logan's Lady\",\n 'Dear Mary: Lessons From the Mother of Jesus for the Modern Mom',\n 'The Unlikely Genius of Doctor Cuthbert Kambazuma',\n 'The Real Deal (Roped, #1)',\n 'The 13th: Destiny Awaits',\n 'Lost Decency, the Untold Afghan Story',\n 'A Priestly Affair (Jesse Thorpe Mysteries Book 2)',\n 'Les Emmurés']"},"metadata":{}}],"execution_count":27},{"cell_type":"code","source":"unranked_books = [book['title'] for book in sample_ds]\nunranked_books","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:45:43.045469Z","iopub.execute_input":"2025-07-01T15:45:43.045711Z","iopub.status.idle":"2025-07-01T15:45:43.050998Z","shell.execute_reply.started":"2025-07-01T15:45:43.045695Z","shell.execute_reply":"2025-07-01T15:45:43.050206Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"['The Real Deal (Roped, #1)',\n 'Les Emmurés',\n \"Mary and O'Neil\",\n 'The Unlikely Genius of Doctor Cuthbert Kambazuma',\n 'The 13th: Destiny Awaits',\n \"Logan's Lady\",\n 'State And Local Politics: Government By The People',\n 'Lost Decency, the Untold Afghan Story',\n 'Dear Mary: Lessons From the Mother of Jesus for the Modern Mom',\n 'A Priestly Affair (Jesse Thorpe Mysteries Book 2)']"},"metadata":{}}],"execution_count":28},{"cell_type":"code","source":"from typing import Optional, List, Dict, Union\nimport numpy as np\n\ndef run_ablation_study(\n    reranker: BookReRanker,\n    user_pref: str,\n    book_batch: List[Dict],\n    scenarios: Dict[str, tuple],\n    top_k: int = None\n) -> Dict[str, Dict[str, int]]:\n    \"\"\"\n    Runs ablation study and returns final ranks as:\n    results[Book Title][Scenario] = Final Rank\n\n    Args:\n        reranker: BookReRanker instance\n        user_pref: User preference string\n        book_batch: List of book dicts\n        scenarios: Dict of scenario names to weight tuples\n        top_k: Optional, limit to top_k ranked books per scenario\n\n    Returns:\n        Nested dictionary, ready for DataFrame creation\n    \"\"\"\n    results = {}\n\n    for scenario, weights in scenarios.items():\n        print(f\"Running scenario: {scenario} with weights {weights}\")\n\n        genre_scores = reranker._compute_genre_similarity(user_pref, book_batch)\n        nll_scores = reranker._compute_nll_scores(user_pref, book_batch)\n        rating_scores = reranker._calculate_bayesian_scores(book_batch)\n\n        min_len = min(len(genre_scores), len(nll_scores), len(rating_scores))\n\n        nll_norm = reranker._normalize_scores(nll_scores[:min_len])\n        genre_norm = reranker._normalize_scores(genre_scores[:min_len], higher_better=True)\n        rating_norm = reranker._normalize_scores(rating_scores[:min_len], higher_better=True)\n\n        combined_scores = (\n            weights[0] * nll_norm +\n            weights[1] * genre_norm +\n            weights[2] * rating_norm\n        )\n\n        final_ranks = np.argsort(-combined_scores) + 1\n\n        for idx in range(min_len):\n            book_title = book_batch[idx].get(\"title\", f\"Book {idx}\")\n            if book_title not in results:\n                results[book_title] = {}\n            results[book_title][scenario] = final_ranks[idx]\n\n    return results\n\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T15:54:58.442703Z","iopub.execute_input":"2025-07-01T15:54:58.443310Z","iopub.status.idle":"2025-07-01T15:54:58.450492Z","shell.execute_reply.started":"2025-07-01T15:54:58.443265Z","shell.execute_reply":"2025-07-01T15:54:58.449741Z"}},"outputs":[],"execution_count":35},{"cell_type":"code","source":"scenarios = {\n    \"Full System\": (0.6, 0.3, 0.1),          # All components active  \n    \"No Genre Similarity\": (0.6, 0.0, 0.4),  # Genre influence removed  \n    \"NLL Only\": (1.0, 0.0, 0.0),             # Only NLL considered  \n    \"Genre Similarity Only\": (0.0, 1.0, 0.0),# Only Genre Similarity  \n    \"Rating Only\": (0.0, 0.0, 1.0)           # Only Ratings  \n}","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T16:03:17.952527Z","iopub.execute_input":"2025-07-01T16:03:17.953100Z","iopub.status.idle":"2025-07-01T16:03:17.957201Z","shell.execute_reply.started":"2025-07-01T16:03:17.953072Z","shell.execute_reply":"2025-07-01T16:03:17.956413Z"}},"outputs":[],"execution_count":47},{"cell_type":"code","source":"results = run_ablation_study(ranker, user_request, sample_ds, scenarios, top_k=len(sample_ds))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T16:03:19.562153Z","iopub.execute_input":"2025-07-01T16:03:19.562445Z","iopub.status.idle":"2025-07-01T16:03:20.397720Z","shell.execute_reply.started":"2025-07-01T16:03:19.562423Z","shell.execute_reply":"2025-07-01T16:03:20.397107Z"}},"outputs":[{"name":"stdout","text":"Running scenario: Full System with weights (0.6, 0.3, 0.1)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"72c6c65927214a8c8d08356c8f432e2e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d5e0dd9929f34b29a335891bb260f64d"}},"metadata":{}},{"name":"stdout","text":"Running scenario: No Genre Similarity with weights (0.6, 0.0, 0.4)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bbe4c46e6611442a881a21b6baeb299a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9f5929f1a5e94a18b7a8ec8717718ff9"}},"metadata":{}},{"name":"stdout","text":"Running scenario: NLL Only with weights (1.0, 0.0, 0.0)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"53bd8b1fb13f4553b0b0fe4576f41c15"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ef0b22c71d2044c89ff95848c588470e"}},"metadata":{}},{"name":"stdout","text":"Running scenario: Genre Similarity Only with weights (0.0, 1.0, 0.0)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1bd933b35b2a4574bee701f42a0c164d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c8f41b7b5ce04f78bb6d49eff0c252e3"}},"metadata":{}},{"name":"stdout","text":"Running scenario: Rating Only with weights (0.0, 0.0, 1.0)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a46e286f5d1f47318ea8596e423ff0ce"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8f05e811e9ee4d978b577ef1afcb4c9b"}},"metadata":{}}],"execution_count":48},{"cell_type":"code","source":"import pandas as pd\n\ndef get_dataframe_from_ranks_dict(final_ranks_dict):\n    df_final_ranks = pd.DataFrame.from_dict(final_ranks_dict, orient=\"index\")\n    df_final_ranks.index.name = \"Book Title\"\n    df_final_ranks = df_final_ranks.reset_index()\n    return df_final_ranks.sort_values(by='Full System').reset_index(drop=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T16:01:18.433153Z","iopub.execute_input":"2025-07-01T16:01:18.434011Z","iopub.status.idle":"2025-07-01T16:01:18.437891Z","shell.execute_reply.started":"2025-07-01T16:01:18.433984Z","shell.execute_reply":"2025-07-01T16:01:18.437241Z"}},"outputs":[],"execution_count":44},{"cell_type":"code","source":"from IPython.display import display, Latex\n\nprint(f\"User Preference: {user_request}\\n\")\ndf = get_dataframe_from_ranks_dict(results)\ndf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-01T16:20:52.687337Z","iopub.execute_input":"2025-07-01T16:20:52.687593Z","iopub.status.idle":"2025-07-01T16:20:52.699762Z","shell.execute_reply.started":"2025-07-01T16:20:52.687575Z","shell.execute_reply":"2025-07-01T16:20:52.698946Z"}},"outputs":[{"name":"stdout","text":"User Preference: Give me novels that explore philosophical themes.\n\n","output_type":"stream"},{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"                                          Book Title  Full System  \\\n0                                       Logan's Lady            1   \n1  A Priestly Affair (Jesse Thorpe Mysteries Book 2)            2   \n2                          The Real Deal (Roped, #1)            3   \n3                           The 13th: Destiny Awaits            4   \n4  State And Local Politics: Government By The Pe...            5   \n5                                    Mary and O'Neil            6   \n6                                        Les Emmurés            7   \n7              Lost Decency, the Untold Afghan Story            8   \n8   The Unlikely Genius of Doctor Cuthbert Kambazuma            9   \n9  Dear Mary: Lessons From the Mother of Jesus fo...           10   \n\n   No Genre Similarity  NLL Only  Genre Similarity Only  Rating Only  \n0                    5         6                      9            4  \n1                    1         8                      4            1  \n2                    7         7                      3            8  \n3                    6         5                      5            6  \n4                   10         1                     10            7  \n5                    9         9                      8            3  \n6                    3         3                      6           10  \n7                    8        10                      2            2  \n8                    4         4                      1            9  \n9                    2         2                      7            5  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Book Title</th>\n      <th>Full System</th>\n      <th>No Genre Similarity</th>\n      <th>NLL Only</th>\n      <th>Genre Similarity Only</th>\n      <th>Rating Only</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Logan's Lady</td>\n      <td>1</td>\n      <td>5</td>\n      <td>6</td>\n      <td>9</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A Priestly Affair (Jesse Thorpe Mysteries Book 2)</td>\n      <td>2</td>\n      <td>1</td>\n      <td>8</td>\n      <td>4</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>The Real Deal (Roped, #1)</td>\n      <td>3</td>\n      <td>7</td>\n      <td>7</td>\n      <td>3</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>The 13th: Destiny Awaits</td>\n      <td>4</td>\n      <td>6</td>\n      <td>5</td>\n      <td>5</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>State And Local Politics: Government By The Pe...</td>\n      <td>5</td>\n      <td>10</td>\n      <td>1</td>\n      <td>10</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Mary and O'Neil</td>\n      <td>6</td>\n      <td>9</td>\n      <td>9</td>\n      <td>8</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Les Emmurés</td>\n      <td>7</td>\n      <td>3</td>\n      <td>3</td>\n      <td>6</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Lost Decency, the Untold Afghan Story</td>\n      <td>8</td>\n      <td>8</td>\n      <td>10</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>The Unlikely Genius of Doctor Cuthbert Kambazuma</td>\n      <td>9</td>\n      <td>4</td>\n      <td>4</td>\n      <td>1</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Dear Mary: Lessons From the Mother of Jesus fo...</td>\n      <td>10</td>\n      <td>2</td>\n      <td>2</td>\n      <td>7</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":58}]}